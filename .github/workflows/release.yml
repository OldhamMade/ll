name: Create Release

on:
  # Trigger this workflow on push (merge) events,
  # but only for the main branch
  push:
    branches:
      - main
      - master

jobs:
  release:
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        os:
          - ubuntu-latest
          - macos-latest

    name: "Create Release: ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}

    steps:
      - name: "[Git] Checkout code"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "[Version] Install"
        uses: gittools/actions/gitversion/setup@v0.9.6
        with:
          versionSpec: '5.x'

      - name: "[Version] Calculate"
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.6

      - name: "[Version] Capture"
        run: echo "RELEASE_VERSION=${{ steps.gitversion.outputs.semVer }}" >> $GITHUB_ENV

      - name: "[Version] Write"
        run: echo "${{env.RELEASE_VERSION}}" > version

      - name: "[Release] Create"
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{env.RELEASE_VERSION}}
          release_name: ${{env.RELEASE_VERSION}}
          body: |
            Please see the changelog for details of this release
          draft: false
          prerelease: false

      - name: "[Build] Install deps"
        if: runner.os == 'Linux'
        run: |
          sudo apt-fast update -qq
          sudo apt-fast --no-install-recommends -yq install curl git

      - name: "[Build] Install asdf"
        run: |
          [ -d ~/.asdf ] || git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.0

      - name: "[Build] Install nim dependencies"
        run: |
          source $HOME/.asdf/asdf.sh
          [ -e $(asdf plugin list|grep nim) ] && asdf plugin add nim
          asdf install nim latest

      - name: "[Build] Create build for ${{ matrix.os }}"
        run: |
          source $HOME/.asdf/asdf.sh
          asdf info
          asdf global nim $(asdf list nim|tail -n 1)
          make release
          tar czf ll-${{ matrix.os }}.tgz ./ll

      - name: "[Release] Upload build for ${{ matrix.os }}"
        uses: actions/upload-artifact@v2
        with:
          name: ll binary (${{ matrix.os }})
          path: ll-${{ matrix.os }}.tgz
